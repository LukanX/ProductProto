// Avoid having to target all text inputs everytime we want to style them.
@mixin style-text-inputs() {
	input[type="text"],
	input[type="search"],
	input[type="url"],
	input[type="email"],
	input[type="password"],
	input[type="number"],
	input[type="tel"],
	input[type="date"],
	input[type="range"]  {
		@content;
	}
}

fieldset {
	border: none;
	margin:0;
	padding:0;
}

.field-container {
	margin-bottom: $spacing;
}

%input-base-styles, textarea {
	font-family: $sans-serif;
	border: 1px solid $beige;
	border-radius: $radius;
	font-size: 1em;
	padding: 0.5em;
	width:100%;
	max-width: 600px;
	display:block;
}

@include style-text-inputs {
	@extend %input-base-styles;
}

input[type="search"] {
	// takes away the rounded corners
	-webkit-appearance: none;
	// removes clear icon from webkit
	&::-webkit-search-cancel-button {
		-webkit-appearance: none;
	}
	// removes clear icon from IE
	&::-ms-clear {
		display: none;
	}
}

input[type="checkbox"] + label,
input[type="radio"] + label {
		color: $blue;
		padding-left: 0.5em;
		cursor: pointer;
		display: inline-block;

		span {
			color: $body-text;
		}
}

select {
	display: block;
	font-size: 1em;
}

input[type=number] {
    -moz-appearance:textfield;
}
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
	-webkit-appearance: none;
	margin: 0;
}

// Used to make form element 100%;
%full-width-text-inputs {
	@include style-text-inputs {
		width: 100%;
	}
}

.inline-form-elements {
	// Flexbox fallback
	display: table;
	width: 100%;

	// Flexbox full width form.
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: flex;

	@include style-text-inputs {
		border-bottom-right-radius: 0;
		border-top-right-radius: 0;
		border-right: 0;

		// Flexbox fallbacks
		display: inline-block;
		width: auto;

		// Flexbox overrides
		-webkit-flex: 1 auto;
		-moz-flex: 1 auto;
		-ms-flex: 1 auto;
		flex: 1 auto;

		font-size: 15px;
		font-size: 1em;
		margin: 0;
		padding: 0.75em;
		// This is so non-flexbox support has some kind of min-width without breaking flex-box layout on modern browsers
		min-width: 13em;
		max-width: none;

		.lt-ie10 & {
			// This is to protect against having to small of inputs on IE8
			min-width: 16em;
		}
	}

	.button {
		border-bottom-left-radius: 0;
		border-top-left-radius: 0;
		margin: 0;
	}
}

form {
    .error {
        color: $error-color;
    }
}

.login-form, .signup-form {

	label {
		display: block;
		clear: both;
	}

	input[type="text"],
	input[type="email"],
	input[type="password"],
	input[type="url"] {
		width: 100%;
		padding: 0.5em;
		font-size: 1em;
		border-radius: 3px;
	}

	.f-input {
		text-align: left;
		margin-bottom: 1.5em;
	}

	.f-message {
		font-size: 0.875em;
		margin-top: -2px;
		padding: 0.25em 1em;
		@include border-bottom-radius( 3px );
	}

	// TODO: use our regular styling for errors in the login form
	.success {
		background: $success-background;
		color: $success-color;
	}
	.error {
		background: $error-background;
		color: $error-color;
	}

	// store/login adds throb to the button
	.button.throb {
		&:after {
			left: 105%;
			top: 12.5%;
		}
	}
}

.login-signup-form-fields {
	border: none;
	padding: 0;
}

.fauxPH {
	white-space: nowrap;
	overflow:hidden;
}

// Error styling
.error-wrap {
	@include style-text-inputs {
		border: 2px solid $error-color;
	}
}

.input-error {
	color: $error-color;
	margin-top: .5em;
	font-weight: bold;
}
